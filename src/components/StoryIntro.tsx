'use client'

import { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { ChevronRight, SkipForward, Volume2, VolumeX } from 'lucide-react'

interface StoryIntroProps {
  onComplete: () => void
  onSkip: () => void
}

interface StoryChapter {
  id: number
  title: string
  content: string[]
  background: string
  image: string
  sound?: string
}

const STORY_CHAPTERS: StoryChapter[] = [
  {
    id: 1,
    title: "Thi√™n ƒê·ªãa Khai T√≠ch",
    content: [
      "Ng√†n nƒÉm tr∆∞·ªõc, khi thi√™n ƒë·ªãa m·ªõi khai, linh kh√≠ tr√†n ng·∫≠p kh·∫Øp ƒë·∫°i l·ª•c...",
      "Nh·ªØng tu sƒ© ƒë·∫ßu ti√™n ƒë√£ kh√°m ph√° ra b√≠ m·∫≠t c·ªßa vi·ªác h·∫•p th·ª• linh kh√≠ t·ª´ thi√™n ƒë·ªãa.",
      "H·ªç l·∫≠p n√™n c√°c t√¥ng ph√°i, truy·ªÅn th·ª´a nh·ªØng ph√°p m√¥n tu luy·ªán huy·ªÅn b√≠.",
      "T·ª´ ƒë√≥, con ƒë∆∞·ªùng tu ti√™n ch√≠nh th·ª©c ƒë∆∞·ª£c m·ªü ra cho nh√¢n lo·∫°i."
    ],
    background: "bg-gradient-to-br from-blue-900 via-purple-900 to-indigo-900",
    image: "üåå",
    sound: "‚ú® √Çm thanh thi√™n ƒë·ªãa khai t√≠ch..."
  },
  {
    id: 2,
    title: "ƒê·∫°i Chi·∫øn T√¥ng Ph√°i",
    content: [
      "Th·ªùi gian tr√¥i qua, c√°c t√¥ng ph√°i ng√†y c√†ng h√πng m·∫°nh v√† b·∫Øt ƒë·∫ßu tranh ch·∫•p.",
      "Ki·∫øm T√¥ng v·ªõi ki·∫øm kh√≠ b·∫°c thi√™n, L√¥i T√¥ng v·ªõi s·∫•m s√©t ch·∫•n ƒë·ªông c·ª≠u thi√™n...",
      "Y T√¥ng c·ª©u ch·ªØa th∆∞∆°ng t·∫≠t, Ph√≤ng Th·ªß T√¥ng v·ªØng nh∆∞ n√∫i Th√°i S∆°n.",
      "Cu·ªôc ƒë·∫°i chi·∫øn k√©o d√†i h√†ng trƒÉm nƒÉm, khi·∫øn ƒë·∫°i l·ª•c tan hoang.",
      "M√°u v√† l·ª≠a bao ph·ªß kh·∫Øp n∆°i, ti·∫øng k√™u th·∫£m thi·∫øt vang kh·∫Øp ch√≠n t·∫ßng tr·ªùi."
    ],
    background: "bg-gradient-to-br from-red-900 via-orange-900 to-yellow-900",
    image: "‚öîÔ∏è",
    sound: "‚ö° Ti·∫øng s·∫•m s√©t v√† ti·∫øng ki·∫øm..."
  },
  {
    id: 3,
    title: "Th·ªùi ƒê·∫°i H·ªón Lo·∫°n",
    content: [
      "Sau ƒë·∫°i chi·∫øn, linh kh√≠ thi√™n ƒë·ªãa b·ªã t·ªïn th∆∞∆°ng n·∫∑ng n·ªÅ.",
      "C√°c cao th·ªß m·ªôt th·ªùi ƒë·ªÅu ·∫©n d·∫≠t, kh√¥ng ai d√°m l·ªô di·ªán.",
      "Th·∫ø gi·ªõi tu ti√™n r∆°i v√†o th·ªùi k·ª≥ ƒëen t·ªëi nh·∫•t trong l·ªãch s·ª≠.",
      "Nh·ªØng b√≠ k√≠p tu luy·ªán c·ªï x∆∞a d·∫ßn b·ªã th·∫•t truy·ªÅn...",
      "Ch·ªâ c√≤n l·∫°i nh·ªØng truy·ªÅn thuy·∫øt m·ªù nh·∫°t v·ªÅ th·ªùi ho√†ng kim."
    ],
    background: "bg-gradient-to-br from-gray-900 via-slate-900 to-black",
    image: "üåë",
    sound: "üå™Ô∏è Ti·∫øng gi√≥ h√∫ trong ƒë√™m t·ªëi..."
  },
  {
    id: 4,
    title: "S·ª± H·ªìi Sinh",
    content: [
      "Nh∆∞ng thi√™n ƒë·∫°o lu√¢n h·ªìi, c·ª±c t·∫Øc t·∫•t lai...",
      "G·∫ßn ƒë√¢y, linh kh√≠ thi√™n ƒë·ªãa b·∫Øt ƒë·∫ßu ph·ª•c h·ªìi m·ªôt c√°ch k·ª≥ di·ªáu.",
      "Nh·ªØng d·∫•u hi·ªáu c·ªßa th·ªùi ƒë·∫°i tu ti√™n m·ªõi ƒëang d·∫ßn hi·ªán ra.",
      "C√°c t√¥ng ph√°i c·ªï x∆∞a b·∫Øt ƒë·∫ßu m·ªü c·ª≠a ƒë√≥n nh·∫≠n ƒë·ªá t·ª≠.",
      "V√† b·∫°n... ch√≠nh l√† m·ªôt trong nh·ªØng ng∆∞·ªùi ƒë∆∞·ª£c ch·ªçn!"
    ],
    background: "bg-gradient-to-br from-green-900 via-emerald-900 to-teal-900",
    image: "‚ú®",
    sound: "üéµ √Çm thanh thi√™n nhi√™n h·ªìi sinh..."
  },
  {
    id: 5,
    title: "H√†nh Tr√¨nh B·∫Øt ƒê·∫ßu",
    content: [
      "Trong b·∫°n ƒëang ti·ªÅm ·∫©n m·ªôt ngu·ªìn linh l·ª±c m·∫°nh m·∫Ω ch∆∞a ƒë∆∞·ª£c khai ph√°.",
      "H√£y ch·ªçn m·ªôt t√¥ng ph√°i ph√π h·ª£p v·ªõi b·∫£n th√¢n v√† b·∫Øt ƒë·∫ßu tu luy·ªán.",
      "Con ƒë∆∞·ªùng tu ti√™n ƒë·∫ßy gian nan, nh∆∞ng ph·∫ßn th∆∞·ªüng s·∫Ω l√† b·∫•t t·ª≠ v√† vƒ©nh h·∫±ng.",
      "T·ª´ Luy·ªán Kh√≠ ƒë·∫øn Ch√¢n Ti√™n, m·ªói b∆∞·ªõc ƒë·ªÅu l√† m·ªôt th·ª≠ th√°ch m·ªõi.",
      "Li·ªáu b·∫°n c√≥ th·ªÉ tr·ªü th√†nh m·ªôt trong nh·ªØng cao th·ªß huy·ªÅn tho·∫°i?"
    ],
    background: "bg-gradient-to-br from-blue-900 via-purple-900 to-pink-900",
    image: "üöÄ",
    sound: "üé∂ Kh√∫c nh·∫°c kh·ªüi ƒë·∫ßu h√†nh tr√¨nh..."
  }
]

export default function StoryIntro({ onComplete, onSkip }: StoryIntroProps) {
  const [currentChapter, setCurrentChapter] = useState(0)
  const [currentLine, setCurrentLine] = useState(0)
  const [displayedText, setDisplayedText] = useState('')
  const [isTyping, setIsTyping] = useState(false)
  const [autoPlay, setAutoPlay] = useState(true)
  const [soundEnabled, setSoundEnabled] = useState(true)

  const chapter = STORY_CHAPTERS[currentChapter]
  const totalChapters = STORY_CHAPTERS.length

  useEffect(() => {
    if (!chapter) return

    const text = chapter.content[currentLine]
    if (!text) return

    setIsTyping(true)
    setDisplayedText('')

    let index = 0
    const typeInterval = setInterval(() => {
      setDisplayedText(text.slice(0, index + 1))
      index++

      if (index >= text.length) {
        clearInterval(typeInterval)
        setIsTyping(false)
        
        // Auto advance to next line after delay
        if (autoPlay) {
          setTimeout(() => {
            nextLine()
          }, 2000)
        }
      }
    }, 50) // Typing speed

    return () => clearInterval(typeInterval)
  }, [currentChapter, currentLine, autoPlay])

  const nextLine = () => {
    if (currentLine < chapter.content.length - 1) {
      setCurrentLine(currentLine + 1)
    } else {
      nextChapter()
    }
  }

  const nextChapter = () => {
    if (currentChapter < totalChapters - 1) {
      setCurrentChapter(currentChapter + 1)
      setCurrentLine(0)
    } else {
      onComplete()
    }
  }

  const handleNext = () => {
    if (isTyping) {
      // Skip typing animation
      setDisplayedText(chapter.content[currentLine])
      setIsTyping(false)
    } else {
      nextLine()
    }
  }

  const handleSkip = () => {
    onSkip()
  }

  return (
    <div className={`min-h-screen flex items-center justify-center p-4 transition-all duration-1000 ${chapter.background}`}>
      <div className="max-w-4xl mx-auto">
        {/* Skip Button */}
        <div className="absolute top-6 right-6 flex gap-2">
          <button
            onClick={() => setSoundEnabled(!soundEnabled)}
            className="btn-secondary p-2"
            title={soundEnabled ? "T·∫Øt √¢m thanh" : "B·∫≠t √¢m thanh"}
          >
            {soundEnabled ? <Volume2 className="w-4 h-4" /> : <VolumeX className="w-4 h-4" />}
          </button>
          <button
            onClick={() => setAutoPlay(!autoPlay)}
            className={`btn-secondary p-2 ${autoPlay ? 'bg-blue-600' : ''}`}
            title={autoPlay ? "T·∫Øt t·ª± ƒë·ªông" : "B·∫≠t t·ª± ƒë·ªông"}
          >
            ‚èØÔ∏è
          </button>
          <button
            onClick={handleSkip}
            className="btn-secondary flex items-center"
          >
            <SkipForward className="w-4 h-4 mr-1" />
            B·ªè qua
          </button>
        </div>

        {/* Progress Bar */}
        <div className="mb-8">
          <div className="flex justify-center mb-4">
            <div className="flex space-x-2">
              {STORY_CHAPTERS.map((_, index) => (
                <div
                  key={index}
                  className={`w-3 h-3 rounded-full transition-colors ${
                    index <= currentChapter ? 'bg-blue-400' : 'bg-gray-600'
                  }`}
                />
              ))}
            </div>
          </div>
          <div className="w-full bg-gray-700 rounded-full h-2">
            <div
              className="bg-gradient-to-r from-blue-500 to-purple-500 h-2 rounded-full transition-all duration-500"
              style={{
                width: `${((currentChapter * chapter.content.length + currentLine + 1) / 
                  (totalChapters * chapter.content.length)) * 100}%`
              }}
            />
          </div>
        </div>

        {/* Story Content */}
        <AnimatePresence mode="wait">
          <motion.div
            key={currentChapter}
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -50 }}
            transition={{ duration: 0.8 }}
            className="text-center"
          >
            {/* Chapter Image */}
            <motion.div
              initial={{ scale: 0 }}
              animate={{ scale: 1 }}
              transition={{ delay: 0.3, type: "spring" }}
              className="text-8xl mb-8"
            >
              {chapter.image}
            </motion.div>

            {/* Sound Effect (Text) */}
            {soundEnabled && chapter.sound && (
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.5 }}
                className="text-center mb-4"
              >
                <p className="text-sm text-gray-400 italic">{chapter.sound}</p>
              </motion.div>
            )}

            {/* Chapter Title */}
            <motion.h1
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 0.5 }}
              className="text-4xl md:text-6xl font-bold text-gradient mb-8"
            >
              {chapter.title}
            </motion.h1>

            {/* Story Text */}
            <div className="card max-w-3xl mx-auto mb-8">
              <div className="min-h-[200px] flex items-center justify-center">
                <motion.p
                  key={`${currentChapter}-${currentLine}`}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  className="text-xl md:text-2xl text-gray-100 leading-relaxed text-center"
                >
                  {displayedText}
                  {isTyping && (
                    <motion.span
                      animate={{ opacity: [1, 0] }}
                      transition={{ duration: 0.5, repeat: Infinity }}
                      className="ml-1"
                    >
                      |
                    </motion.span>
                  )}
                </motion.p>
              </div>

              {/* Chapter Progress */}
              <div className="mt-6 flex justify-center">
                <div className="flex space-x-2">
                  {chapter.content.map((_, index) => (
                    <div
                      key={index}
                      className={`w-2 h-2 rounded-full transition-colors ${
                        index <= currentLine ? 'bg-blue-400' : 'bg-gray-600'
                      }`}
                    />
                  ))}
                </div>
              </div>
            </div>

            {/* Navigation */}
            <div className="flex justify-center gap-4">
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                onClick={handleNext}
                className="btn-primary px-8 py-3 text-lg flex items-center"
                disabled={isTyping && autoPlay}
              >
                {isTyping ? 'B·ªè qua hi·ªáu ·ª©ng' : 
                 currentChapter === totalChapters - 1 && currentLine === chapter.content.length - 1 
                   ? 'B·∫Øt ƒë·∫ßu h√†nh tr√¨nh' : 'Ti·∫øp t·ª•c'}
                <ChevronRight className="w-5 h-5 ml-2" />
              </motion.button>
            </div>
          </motion.div>
        </AnimatePresence>

        {/* Footer */}
        <div className="text-center mt-12 text-gray-400 text-sm">
          <p>To√†n D√¢n Tu Ti√™n - H√†nh tr√¨nh tu ti√™n b·∫•t t·∫≠n</p>
        </div>
      </div>
    </div>
  )
}
