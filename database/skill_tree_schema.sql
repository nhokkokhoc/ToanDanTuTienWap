-- Phase 1.3.2: Skill Tree System Database Schema
-- Extends existing database to support skill tree functionality

-- Add skill points to characters table
ALTER TABLE characters 
ADD COLUMN IF NOT EXISTS available_skill_points INTEGER DEFAULT 0,
ADD COLUMN IF NOT EXISTS total_skill_points_earned INTEGER DEFAULT 0;

-- Extend character_skills table for skill tree system
ALTER TABLE character_skills 
ADD COLUMN IF NOT EXISTS skill_tier INTEGER DEFAULT 1,
ADD COLUMN IF NOT EXISTS max_level INTEGER DEFAULT 10,
ADD COLUMN IF NOT EXISTS current_effects JSONB DEFAULT '{}';

-- Create skill tree configuration table
CREATE TABLE IF NOT EXISTS skill_tree_config (
  id TEXT PRIMARY KEY,
  sect_id TEXT NOT NULL, -- 'sword', 'lightning', 'medical', 'defense'
  name TEXT NOT NULL,
  description TEXT,
  tier INTEGER NOT NULL, -- 1, 2, 3, 4
  max_level INTEGER DEFAULT 10,
  effect_type TEXT NOT NULL, -- 'stat_bonus', 'cultivation_speed', 'passive_ability'
  effect_value DECIMAL NOT NULL,
  effect_per_level DECIMAL DEFAULT 0.0,
  stat_type TEXT, -- 'attack', 'defense', 'speed', etc.
  unlock_requirements JSONB DEFAULT '{}', -- level, realm, prerequisite_skills
  skill_point_cost INTEGER DEFAULT 1,
  display_order INTEGER DEFAULT 0,
  icon TEXT,
  created_at TIMESTAMP DEFAULT NOW()
);

-- Create indexes for skill_tree_config
CREATE INDEX IF NOT EXISTS idx_skill_tree_config_sect_id ON skill_tree_config(sect_id);
CREATE INDEX IF NOT EXISTS idx_skill_tree_config_tier ON skill_tree_config(tier);

-- Insert Sword Sect Skills
INSERT INTO skill_tree_config (id, sect_id, name, description, tier, effect_type, effect_value, effect_per_level, stat_type, unlock_requirements, skill_point_cost, display_order, icon) VALUES
-- Tier 1
('sword_basic', 'sword', 'C∆° B·∫£n Ki·∫øm Ph√°p', 'N·ªÅn t·∫£ng c·ªßa ki·∫øm thu·∫≠t, tƒÉng s·ª©c t·∫•n c√¥ng c∆° b·∫£n.', 1, 'stat_bonus', 5, 2, 'attack', '{"level": 1}', 1, 1, '‚öîÔ∏è'),
('sword_speed', 'sword', 'T·ªëc Ki·∫øm', 'TƒÉng t·ªëc ƒë·ªô ra ƒë√≤n v√† di chuy·ªÉn.', 1, 'stat_bonus', 3, 1, 'speed', '{"level": 1}', 1, 2, 'üí®'),
('sword_qi', 'sword', 'Ki·∫øm Kh√≠ C∆° B·∫£n', 'TƒÉng t·ª∑ l·ªá ch√≠ m·∫°ng khi s·ª≠ d·ª•ng ki·∫øm.', 1, 'stat_bonus', 0.02, 0.01, 'criticalRate', '{"level": 1}', 1, 3, '‚ú®'),

-- Tier 2
('sword_sharp_qi', 'sword', 'Ki·∫øm Kh√≠ S·∫Øc B√©n', 'Ki·∫øm kh√≠ s·∫Øc b√©n h∆°n, tƒÉng m·∫°nh t·ª∑ l·ªá ch√≠ m·∫°ng.', 2, 'stat_bonus', 0.08, 0.02, 'criticalRate', '{"level": 10, "prerequisiteSkills": ["sword_basic"]}', 2, 4, '‚ö°'),
('sword_combo', 'sword', 'Li√™n Ho√†n Ki·∫øm', 'Chu·ªói ƒë√≤n ki·∫øm li√™n ho√†n, tƒÉng s·ª©c t·∫•n c√¥ng.', 2, 'stat_bonus', 10, 3, 'attack', '{"level": 10, "prerequisiteSkills": ["sword_speed"]}', 2, 5, 'üå™Ô∏è'),
('sword_defense', 'sword', 'Ph√≤ng Th·ªß Ki·∫øm', 'S·ª≠ d·ª•ng ki·∫øm ƒë·ªÉ ph√≤ng th·ªß, tƒÉng kh·∫£ nƒÉng ph√≤ng th·ªß.', 2, 'stat_bonus', 5, 2, 'defense', '{"level": 10}', 2, 6, 'üõ°Ô∏è'),

-- Tier 3
('sword_master', 'sword', 'Thi√™n Ki·∫øm Thu·∫≠t', 'Ki·∫øm thu·∫≠t thi√™n c·∫•p, tƒÉng m·∫°nh t·∫•n c√¥ng v√† ch√≠ m·∫°ng.', 3, 'stat_bonus', 15, 5, 'attack', '{"level": 20, "prerequisiteSkills": ["sword_sharp_qi", "sword_combo"]}', 3, 7, 'üó°Ô∏è'),
('sword_cultivation', 'sword', 'Ki·∫øm √ù Th√¥ng Thi√™n', 'Th·∫•u hi·ªÉu ki·∫øm √Ω, tƒÉng t·ªëc ƒë·ªô tu luy·ªán.', 3, 'cultivation_speed', 0.20, 0.05, null, '{"level": 20, "prerequisiteSkills": ["sword_defense"]}', 3, 8, 'üåü'),
('sword_ultimate', 'sword', 'V·∫°n Ki·∫øm Quy T√¥ng', 'Tuy·ªát k·ªπ ki·∫øm t√¥ng, s·ª©c m·∫°nh t·ªëi th∆∞·ª£ng.', 3, 'stat_bonus', 25, 8, 'attack', '{"level": 25, "prerequisiteSkills": ["sword_master", "sword_cultivation"]}', 3, 9, 'üëë');

-- Insert Lightning Sect Skills
INSERT INTO skill_tree_config (id, sect_id, name, description, tier, effect_type, effect_value, effect_per_level, stat_type, unlock_requirements, skill_point_cost, display_order, icon) VALUES
-- Tier 1
('lightning_basic', 'lightning', 'C∆° B·∫£n L√¥i Ph√°p', 'N·ªÅn t·∫£ng c·ªßa l√¥i thu·∫≠t, tƒÉng s·ª©c t·∫•n c√¥ng ma thu·∫≠t.', 1, 'stat_bonus', 4, 2, 'attack', '{"level": 1}', 1, 1, '‚ö°'),
('lightning_speed', 'lightning', 'L√¥i T·ªëc', 'T·ªëc ƒë·ªô nhanh nh∆∞ s√©t ƒë√°nh, tƒÉng t·ªëc ƒë·ªô ƒë√°ng k·ªÉ.', 1, 'stat_bonus', 6, 2, 'speed', '{"level": 1}', 1, 2, 'üí®'),
('lightning_static', 'lightning', 'Tƒ©nh ƒêi·ªán', 'T√≠ch t·ª• tƒ©nh ƒëi·ªán, tƒÉng s·ª©c m·∫°nh tinh th·∫ßn.', 1, 'stat_bonus', 3, 1, 'spiritualPower', '{"level": 1}', 1, 3, '‚ö°'),

-- Tier 2
('lightning_storm', 'lightning', 'S·∫•m S√©t Li√™n Ho√†n', 'Chu·ªói s·∫•m s√©t li√™n ho√†n, tƒÉng m·∫°nh s·ª©c t·∫•n c√¥ng.', 2, 'stat_bonus', 12, 4, 'attack', '{"level": 10, "prerequisiteSkills": ["lightning_basic"]}', 2, 4, 'üå©Ô∏è'),
('lightning_light_speed', 'lightning', 'T·ªëc ƒê·ªô √Ånh S√°ng', 'Di chuy·ªÉn v·ªõi t·ªëc ƒë·ªô √°nh s√°ng.', 2, 'stat_bonus', 15, 5, 'speed', '{"level": 10, "prerequisiteSkills": ["lightning_speed"]}', 2, 5, 'üí´'),
('lightning_shield', 'lightning', 'L√¥i Khi√™n', 'Khi√™n s√©t b·∫£o v·ªá, tƒÉng ph√≤ng th·ªß.', 2, 'stat_bonus', 8, 3, 'defense', '{"level": 10, "prerequisiteSkills": ["lightning_static"]}', 2, 6, '‚ö°üõ°Ô∏è');

-- Insert Medical Sect Skills
INSERT INTO skill_tree_config (id, sect_id, name, description, tier, effect_type, effect_value, effect_per_level, stat_type, unlock_requirements, skill_point_cost, display_order, icon) VALUES
-- Tier 1
('medical_basic', 'medical', 'C∆° B·∫£n Y Thu·∫≠t', 'N·ªÅn t·∫£ng y thu·∫≠t, tƒÉng m√°u t·ªëi ƒëa.', 1, 'stat_bonus', 100, 50, 'spiritualPower', '{"level": 1}', 1, 1, 'üíö'),
('medical_herbs', 'medical', 'Th·∫£o D∆∞·ª£c H·ªçc', 'Hi·ªÉu bi·∫øt v·ªÅ th·∫£o d∆∞·ª£c, tƒÉng hi·ªáu qu·∫£ thu·ªëc.', 1, 'passive_ability', 0.05, 0.02, null, '{"level": 1}', 1, 2, 'üåø'),
('medical_regen', 'medical', 'N·ªôi C√¥ng D∆∞·ª°ng Sinh', 'N·ªôi c√¥ng h·ªìi ph·ª•c, tƒÉng t·ªëc ƒë·ªô h·ªìi m√°u.', 1, 'passive_ability', 0.03, 0.01, null, '{"level": 1}', 1, 3, 'üíñ');

-- Insert Defense Sect Skills
INSERT INTO skill_tree_config (id, sect_id, name, description, tier, effect_type, effect_value, effect_per_level, stat_type, unlock_requirements, skill_point_cost, display_order, icon) VALUES
-- Tier 1
('defense_basic', 'defense', 'C∆° B·∫£n Khi√™n Ph√°p', 'N·ªÅn t·∫£ng ph√≤ng th·ªß, tƒÉng kh·∫£ nƒÉng ph√≤ng th·ªß.', 1, 'stat_bonus', 8, 3, 'defense', '{"level": 1}', 1, 1, 'üõ°Ô∏è'),
('defense_body', 'defense', 'Th·ªÉ Ph√°ch C∆∞·ªùng H√≥a', 'C∆∞·ªùng h√≥a th·ªÉ ph√°ch, tƒÉng m√°u t·ªëi ƒëa.', 1, 'stat_bonus', 150, 75, 'spiritualPower', '{"level": 1}', 1, 2, 'üí™'),
('defense_endurance', 'defense', 'Ki√™n Nh·∫´n', 'TƒÉng kh·∫£ nƒÉng ch·ªãu ƒë·ª±ng s√°t th∆∞∆°ng.', 1, 'passive_ability', 0.05, 0.02, null, '{"level": 1}', 1, 3, 'üèîÔ∏è');

-- Function to calculate skill points earned from level
CREATE OR REPLACE FUNCTION calculate_skill_points_from_level(character_level INTEGER)
RETURNS INTEGER AS $$
BEGIN
  -- Base: 1 point per level
  -- Milestone bonus: +2 at levels 10, 20, 30, etc.
  RETURN character_level + (character_level / 10) * 2;
END;
$$ LANGUAGE plpgsql;

-- Function to calculate skill points from breakthroughs
CREATE OR REPLACE FUNCTION calculate_skill_points_from_breakthroughs(character_realm TEXT)
RETURNS INTEGER AS $$
BEGIN
  CASE character_realm
    WHEN 'qi_refining' THEN RETURN 0;
    WHEN 'foundation' THEN RETURN 3;
    WHEN 'golden_core' THEN RETURN 6;
    WHEN 'nascent_soul' THEN RETURN 9;
    WHEN 'spirit_severing' THEN RETURN 12;
    WHEN 'void_refinement' THEN RETURN 15;
    WHEN 'body_integration' THEN RETURN 18;
    WHEN 'mahayana' THEN RETURN 21;
    WHEN 'true_immortal' THEN RETURN 24;
    ELSE RETURN 0;
  END CASE;
END;
$$ LANGUAGE plpgsql;

-- Function to update character skill points
CREATE OR REPLACE FUNCTION update_character_skill_points(character_id UUID)
RETURNS VOID AS $$
DECLARE
  char_level INTEGER;
  char_realm TEXT;
  total_points INTEGER;
  used_points INTEGER;
BEGIN
  -- Get character level and realm
  SELECT level, realm INTO char_level, char_realm
  FROM characters WHERE id = character_id;
  
  -- Calculate total skill points earned
  total_points := calculate_skill_points_from_level(char_level) + 
                  calculate_skill_points_from_breakthroughs(char_realm);
  
  -- Calculate used skill points
  SELECT COALESCE(SUM(allocated_points), 0) INTO used_points
  FROM character_skills WHERE character_id = character_id;
  
  -- Update character skill points
  UPDATE characters 
  SET 
    total_skill_points_earned = total_points,
    available_skill_points = total_points - used_points
  WHERE id = character_id;
END;
$$ LANGUAGE plpgsql;

-- Trigger to update skill points when character levels up or breaks through
CREATE OR REPLACE FUNCTION trigger_update_skill_points()
RETURNS TRIGGER AS $$
BEGIN
  PERFORM update_character_skill_points(NEW.id);
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create trigger
DROP TRIGGER IF EXISTS update_skill_points_trigger ON characters;
CREATE TRIGGER update_skill_points_trigger
  AFTER UPDATE OF level, realm ON characters
  FOR EACH ROW
  EXECUTE FUNCTION trigger_update_skill_points();

-- Update existing characters' skill points
DO $$
DECLARE
  char_record RECORD;
BEGIN
  FOR char_record IN SELECT id FROM characters LOOP
    PERFORM update_character_skill_points(char_record.id);
  END LOOP;
END $$;
